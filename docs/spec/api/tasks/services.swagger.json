{
  "swagger": "2.0",
  "info": {
    "title": "api/tasks/services.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "TaskService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/create_tasks": {
      "post": {
        "operationId": "TaskService_CreateTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tasksCreateTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tasksCreateTasksRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/api/v1/delete_tasks": {
      "post": {
        "operationId": "TaskService_DeleteTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tasksDeleteTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tasksDeleteTasksRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/api/v1/get_all_dependencies": {
      "post": {
        "summary": "GetAllDependencies fetches all (direct and indirect) dependencies\nof tasks.",
        "operationId": "TaskService_GetAllDependencies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tasksGetAllDependenciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tasksGetAllDependenciesRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/api/v1/get_tasks": {
      "post": {
        "operationId": "TaskService_GetTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tasksGetTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tasksGetTasksRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/api/v1/update_tasks": {
      "post": {
        "operationId": "TaskService_UpdateTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tasksUpdateTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tasksUpdateTasksRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    }
  },
  "definitions": {
    "GetAllDependenciesResponseIdArray": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "tasksCreateTasksRequest": {
      "type": "object",
      "properties": {
        "tasksToCreate": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tasksCreateTasksRequestTaskPrototype"
          }
        }
      }
    },
    "tasksCreateTasksRequestTaskPrototype": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "deps": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "priority": {
          "$ref": "#/definitions/tasksPriority"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "tasksCreateTasksResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "tasksDeleteTasksRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "tasksDeleteTasksResponse": {
      "type": "object"
    },
    "tasksGetAllDependenciesRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "tasksGetAllDependenciesResponse": {
      "type": "object",
      "properties": {
        "dependenciesById": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GetAllDependenciesResponseIdArray"
          }
        }
      }
    },
    "tasksGetTasksRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "tasksGetTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tasksTask"
          }
        }
      }
    },
    "tasksPriority": {
      "type": "string",
      "enum": [
        "PRIORITY_UNSPECIFIED",
        "PRIORITY_LOW",
        "PRIORITY_MEDIUM",
        "PRIORITY_HIGH",
        "PRIORITY_CRITICAL"
      ],
      "default": "PRIORITY_UNSPECIFIED"
    },
    "tasksTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "deps": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "priority": {
          "$ref": "#/definitions/tasksPriority"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "tasksUpdateTasksRequest": {
      "type": "object",
      "properties": {
        "tasksToUpdate": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tasksUpdateTasksRequestTaskPrototype"
          }
        }
      }
    },
    "tasksUpdateTasksRequestTaskPrototype": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "deps": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "priority": {
          "$ref": "#/definitions/tasksPriority"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "tasksUpdateTasksResponse": {
      "type": "object"
    }
  }
}
