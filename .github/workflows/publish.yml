name: publish

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: extract version
        id: extract
        run: |
          commit_message=$(git log -1 --pretty=%s)
          version=$(echo "$commit_message" | sed -nE 's/.*release\/(v[0-9]+\.[0-9]+\.[0-9]+).*/\1/p')
          echo "RELEASE_VERSION=$version" >> "$GITHUB_OUTPUT"
          echo "COMMIT_MESSAGE=$commit_message" >> "$GITHUB_OUTPUT"

      - name: verify
        env:
          RELEASE_VERSION: ${{ steps.extract.outputs.RELEASE_VERSION }}
          COMMIT_MESSAGE: ${{ steps.extract.outputs.COMMIT_MESSAGE }}
        run: |
          if [[ -z "$RELEASE_VERSION" ]]; then
            echo "Failed to extract version. Commit message:"
            echo "$COMMIT_MESSAGE"
            exit 1
          fi

      - name: publish release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ steps.extract.outputs.RELEASE_VERSION }}
          tag: ${{ steps.extract.outputs.RELEASE_VERSION }}

  create-image:
    name: create-image
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2

      - name: login to GitHub docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true
